version: "3"

services:
  nuxt:
    build: ./frontend/nuxt-fe
    restart: on-failure
    container_name: nuxt-app
    restart: always
    ports:
      - "3000:3000"
    depends_on: 
      - apihub
      - mongodb1
      - mongodb2
    volumes: 
      - ./frontend/nuxt-fe:/app
      
    command: npm run dev
    networks:
      - mongonetwork

  nginx:
    build: ./nginx/
    networks:
      - mongonetwork
    container_name: nginx
    ports:
      - "80:80"
    
    depends_on:
      - nuxt
      - mongodb1
      - mongodb2

  celery:
    container_name: celery
    build: ./celery/ 
    volumes:
      - ./celery/server.py:/celery/server.py 
      - ./celery/worker.py:/celery/worker.py 
      - pptxdecks:/celery/output
    environment: 
      MONGODB: mongodb://mongodb2
      RABBITMQ: pyamqp://rabbitmq
    networks:
      - mongonetwork
    depends_on: 
      - mongodb1
      - mongodb2
      - rabbitmq
  
  celery-beat:
    container_name: celery-beat
    build: ./celery-beat/
    volumes: 
      - pptxdecks:/celery-beat/output
    environment: 
      MONGODB: mongodb://mongodb2
      RABBITMQ: pyamqp://rabbitmq
    networks:
      - mongonetwork
    entrypoint:
      - /celery-beat/beat.sh
    depends_on: 
      - mongodb1
      - mongodb2
      - rabbitmq
      - celery
      
  mongo-stream:
    container_name: mongo-stream
    restart: on-failure
    build: ./mongo-stream/
    command: python3 -u server.py
    environment: 
      MONGODB: mongodb://mongodb2
    ports: 
      - "3333:3333"
    depends_on: 
      - mongo-startup
      - mongodb1
      - mongodb2
    volumes: 
      - ./mongo-stream/server.py:/usr/app/server.py
    networks: 
      - mongonetwork

  mongodb1:
    image: mongo:latest
    container_name: replica1
    networks:
      - mongonetwork
    ports:
      - 30001:27017
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]

  mongodb2:
    image: mongo:latest
    container_name: replica2
    volumes: 
      - ./db-backup/primary:/data/db
    networks:
      - mongonetwork
    ports:
      - 30002:27017
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]

  mongo-startup:
    image: mongo
    container_name: startup-agent
    networks:
      - mongonetwork
    depends_on:
      - mongodb1
      - mongodb2

    volumes:
      - ./mongo-startup:/mongo-startup
    entrypoint:
      - /mongo-startup/initiate_replica.sh

  apihub:
    build: ./backend/
    container_name: apihub
    restart: on-failure
    environment: 
      MONGODB: mongodb://mongodb2
      RABBITMQ: pyamqp://rabbitmq
    volumes:
      - pptxdecks:/usr/app/output
      - ./modules:/usr/app/modules
      - ./pptx:/usr/app/pptx
      - ./utils:/usr/app/utils
      - type: bind
        source: ./backend/app/api.py
        target: /usr/app/api.py
      

        
    command: uvicorn --host=0.0.0.0 --port=8000 app.api:app --reload
    ports:
      - "8000:8000"
    depends_on: 
      - mongodb1
      - mongo-startup
      - rabbitmq
    networks:
      - mongonetwork

  rabbitmq:
    container_name: rabbitmq
    networks:
      - mongonetwork
    image: rabbitmq:3.8-management
    ports: 
      - "15672:15672"

  flower:
    container_name: flower
    image: mher/flower:0.9.5
    command: ["flower", "--broker=amqp://rabbitmq", "--port=5555"]
    networks:
      - mongonetwork 
    ports:
      - "5555:5555"
    depends_on:
      - mongodb1
      - mongodb2
      - rabbitmq
      - celery
  
  influxdb:
      image: quay.io/influxdb/influxdb:v2.0.3
      restart: on-failure
      container_name: influxdb
      ports:
      - "8086:8086"
      volumes: 
        - ./influxdb/data:/var/lib/influxdb
      networks: 
        - mongonetwork

  chronograf:
      image: chronograf:latest
      container_name: chronograf
      entrypoint: 'chronograf --influxdb-url=http://influxdb:8086'
      ports: 
      - "8888:8888"
      depends_on:
        - influxdb
      networks: 
        - mongonetwork
      volumes:
        - ./influxdb/chronograf:/var/lib/chronograf

networks:
  mongonetwork:

volumes: 
  pptxdecks: